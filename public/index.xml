<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ayan Bag</title>
    <link>https://example.com/</link>
    <description>Recent content on Ayan Bag</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 09 Apr 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://example.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Why to use Strict Mode in JavaScript ?</title>
      <link>https://example.com/articles/use-strict-in-js/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/articles/use-strict-in-js/</guid>
      <description>JavaScript strict mode is a new feature in ECMAScript 5 that enables us to code a program, or a method in a &amp;ldquo;strict&amp;rdquo; operating context. It means, the errors which are being ignored by the compiler, will throw an exception message. It is a way to opt into a restricted version of JavaScript i.e implicitly opting-out of &amp;ldquo;sloppy mode&amp;rdquo;.
For example, in non-strict mode if you initialize a variable without declaring it using the var keyword (e.</description>
    </item>
    
    <item>
      <title>Kickstart to Machine Learning with Sckit-learn</title>
      <link>https://example.com/articles/python-sckit-learn-cheat-sheet/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/articles/python-sckit-learn-cheat-sheet/</guid>
      <description>Sckit-learn is a open source Python library that provides many unsupervised and supervised learning algorithms. It also implements a range of preprocessing, cross-validation and visualization algorithms using a unified interface
Basic example:
&amp;gt;&amp;gt;&amp;gt; from sklearn import neighbors, datasets, preprocessing &amp;gt;&amp;gt;&amp;gt; from sklearn.model_selection import train_test_split &amp;gt;&amp;gt;&amp;gt; from sklearn.metrics import accuracy_score &amp;gt;&amp;gt;&amp;gt; iris = datasets.load_iris() &amp;gt;&amp;gt;&amp;gt; X, y = iris.data[:, :2], iris.target &amp;gt;&amp;gt;&amp;gt; X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=33) &amp;gt;&amp;gt;&amp;gt; scaler = preprocessing.</description>
    </item>
    
    <item>
      <title>Introduction to Multi-threading in Python</title>
      <link>https://example.com/articles/intro-to-mutlithreading-python/</link>
      <pubDate>Tue, 30 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/articles/intro-to-mutlithreading-python/</guid>
      <description>Like multiprocessing, multithreading **is a way of achieving multitasking. Most of the code we write in Python is single threaded. A python virtual machine runs behind the scene uses a thread called the main thread i.e main() to execute the code which has written.
A thread is an entity within a process that can be scheduled for execution. Also, it is the smallest unit of processing that can be performed in an OS (Operating System).</description>
    </item>
    
    <item>
      <title>A Sweet Introduction to R Programming</title>
      <link>https://example.com/articles/sweet-introduction-to-r-programming/</link>
      <pubDate>Sat, 27 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/articles/sweet-introduction-to-r-programming/</guid>
      <description>R is a open source and very popular programming language and environment for statistical computer and graphics.R was designed by statisticians and was specialized for statistical computing, and thus is known as the lingua franca of statistics. It is mostly used in Data Science and Machine Learning. It is managed by R core development team — team of volunteer developer from across the globe. R provide a wide variety of statistical and graphical techniques and highly extensible.</description>
    </item>
    
    <item>
      <title>Building Termina Chat Application with Python and Pusher</title>
      <link>https://example.com/articles/building-terminal-chat-application/</link>
      <pubDate>Tue, 23 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/articles/building-terminal-chat-application/</guid>
      <description>It is better to have a conversation
In our daily life we encounter with many chat application which a really awesome. It takes a lot effort to develop and maintain these application because it involves a two way communication between different user and logging each and every request provide by server.
Getting inspired by the chat application as we see in Die Hard 4, I created my own realtime chat application .</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://example.com/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/about/</guid>
      <description>I’m Ayan Bag, a backend developer developer, technical writer, and a vivid gamer. I learn in public and write about everything I know. I am a prefinal year student at Kalyani Government Engineering College, pursuing bachelors in Electronics and Communications.
When I am not solving user problems and my infinite chrome tabs have been closed, you can find me preparing for my next hackathon, relishing vintage cricket matches or bumping to hip hop jams on repeat.</description>
    </item>
    
  </channel>
</rss>